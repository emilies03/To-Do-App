name: Continuous Integration
on:
  pull_request:
    types: [opened, synchronize]
  push:
    paths-ignore:
      - 'README.md'

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: build docker container 
      run: docker build --target test --tag todo-app:test .
    - name: run docker tests
      run: docker run todo-app:test
    - name: check package dependencies
      run: docker run --entrypoint poetry todo-app:test run safety check
      
  build-and-push-docker-image:
    name: Docker Build, Tag & Publish
    needs: build-and-test
    # if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Code
        uses: actions/checkout@v1
        id: git_checkout

      - name: Build, Tag & Publish Image to DockerHub
        uses: dinushchathurya/build-tag-push-action@v1.2.1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          context: .
          file: Dockerfile
          repoOwner: ${{ secrets.DOCKERHUB_USERNAME }}
          repository:  todo-app
          tag: main

  update-infrastructure:
    name: Terraform changes
    needs: build-and-push-docker-image
    # if: ${{ github.ref == 'refs/heads/main' }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout Code
      uses: actions/checkout@v1
      id: git_checkout
    - name: Terraform init
      working-directory: infrastructure
      run: terraform init
    - name: Terraform apply
      working-directory: infrastructure
      run: terraform apply -auto-approve
    - name: Curl Azure webhook to refresh azure image
      working-directory: infrastructure
      run: curl --fail -dH -X POST $(terraform output -raw webhook_url)